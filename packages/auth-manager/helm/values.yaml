global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  commonLabelsAndAnnotations:
    environment: "development"

commonLabelsAndAnnotations:
  component: "backend"
  partOf: "authentication"
  owner: "infra"

enabled: true
replicaCount: 1
initialDelaySeconds: 60
resetOnConfigChange: true

extraEnvVars: []
# extraEnvVars:
#   - name: DB_HOST
#     value: localhost
#   - name: DB_NAME
#     value: postgres

cloudProvider:
  dockerRegistryUrl: my-registry-url.io
  imagePullSecretName: 'my-registry-secret'
  flavor: openshift

ca:
  enabled: false
  secretName: 'root-ca'
  path: '/usr/local/share/ca-certificates'
  key: 'ca.crt'

image:
  repository: auth-manager
  # tag: 'latest'

env:
  port: 8080
  targetPort: 8080
  logLevel: info
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: 1mb
  tracing:
    enabled: false
    url: http://localhost:55681/v1/trace
  metrics:
    enabled: false
    url: http://localhost:55681/v1/metrics

  configManager:
    offlineMode: false
    serverUrl: 'https://infra-config-config/api'
    configName: 'auth-manager'

dbConfig:
  host: localhost
  username: postgres
  password: postgres
  database: auth-manager
  port: 5432
  useExternalSecret: true
  secretName: ''
  sslAuth:
    enabled: false
    certFileName: cert.pem
    keyFileName: key.pem
    caFileName: ca.crt

additionalPodAnnotations: {}

resources:
  enabled: true
  value:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

route:
  enabled: true
  path: /
  timeout:
    enabled: false # defaults to 30s by openshift
    duration: 60s # supported units (us, ms, s, m, h, d)

ingress:
  enabled: false
  path: /
  host: 'localhost'
  cors:
    enabled: true
    origin: '*'
