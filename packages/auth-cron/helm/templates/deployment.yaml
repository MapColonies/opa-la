{{- $releaseName := .Release.Name -}}
{{- $chartName := include "auth-cron.name" . -}}
{{- $cloudProviderFlavor := include "auth-cron.cloudProviderFlavor" . -}}
{{- $cloudProviderDockerRegistryUrl := include "auth-cron.cloudProviderDockerRegistryUrl" . -}}
{{- $cloudProviderImagePullSecretName := include "auth-cron.cloudProviderImagePullSecretName" . -}}
{{ $postgresSecretName := ternary .Values.dbConfig.externalSecretName (printf "%s%s" .Release.Name "-postgres-secret") .Values.dbConfig.useExternalSecret }}
{{- $imageTag := include "auth-cron.tag" . -}}
{{- if .Values.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $releaseName }}-{{ $chartName }}
  labels:
    app: {{ $chartName }}
    component: {{ $chartName }}
    environment: {{ include "auth-cron.environment" . }}
    release: {{ $releaseName }}
    {{- include "auth-cron.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ $chartName }}
      release: {{ $releaseName }}
      run: {{ $releaseName }}-{{ $chartName }}
      {{- include "auth-cron.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ $chartName }}
        release: {{ $releaseName }}
        run: {{ $releaseName }}-{{ $chartName }}
        {{- include "auth-cron.selectorLabels" . | nindent 8 }}
      {{- if .Values.resetOnConfigChange }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- end }}
    spec:
    {{- if $cloudProviderImagePullSecretName }}
      imagePullSecrets:
        - name: {{ $cloudProviderImagePullSecretName | quote }}
    {{- end }}
      containers:
        - name: {{ $releaseName }}-{{ $chartName }}-deployment
          {{- with .Values.image }}
          image: {{ $cloudProviderDockerRegistryUrl }}{{ .repository }}:{{ $imageTag }}
          {{- end }}
          volumeMounts:
            {{- if .Values.caSecretName }}
            - mountPath: {{ printf "%s/%s" .Values.caPath .Values.caKey | quote }}
              name: root-ca
              subPath: {{ quote .Values.caKey }}
            {{- end }}
            - name: config
              mountPath: /usr/src/app/packages/auth-cron/config/production.json
              subPath: production.json
              readOnly: true
          env:
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ $postgresSecretName }}
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $postgresSecretName }}
                  key: password          
            {{- if .Values.caSecretName }}
            - name: REQUESTS_CA_BUNDLE
              value: {{ printf "%s/%s" .Values.caPath .Values.caKey | quote }}
            - name: NODE_EXTRA_CA_CERTS
              value: {{ printf "[%s/%s]" .Values.caPath .Values.caKey | quote }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ $releaseName }}-{{ $chartName }}-configmap
          livenessProbe:
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
            httpGet:
              path: /liveness
              port: 8080
          {{- if .Values.resources.enabled }}
          resources:
            {{- toYaml .Values.resources.value | nindent 12 }}
          {{- end }}
      volumes:
        {{- if .Values.caSecretName }}
        - name: root-ca
          secret:
            secretName: {{ .Values.caSecretName }}
        {{- end }}
        - name: config
          secret:
            secretName: {{ $releaseName }}-{{ $chartName }}-cron-secret
            items:
            - key: config
              path: production.json
{{- end -}}
