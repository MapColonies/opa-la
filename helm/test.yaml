---
# Source: opa-la/charts/auth-cron/templates/cron-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-auth-cron-cron-secret
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    app: auth-cronshare
    component: auth-cron
    environment: development
    release: release-name
    helm.sh/chart: auth-cron-1.1.0
    app.kubernetes.io/name: auth-cron
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  config: eyAiY3JvbiI6IHt9IH0=
---
# Source: opa-la/charts/auth-cron/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-auth-cron-configmap
data:
  LOG_LEVEL: "info"
  LOG_PRETTY_PRINT_ENABLED: "false"
  DB_HOST: localhost
  DB_NAME: auth-manager
  DB_PORT: "5432"
  DB_ENABLE_SSL_AUTH: "false"
---
# Source: opa-la/charts/auth-manager/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-auth-manager-configmap
data:
  REQUEST_PAYLOAD_LIMIT: "1mb"
  RESPONSE_COMPRESSION_ENABLED: "true"
  LOG_LEVEL: "info"
  LOG_PRETTY_PRINT_ENABLED: "false"
  
  
  DB_HOST: localhost
  DB_NAME: auth-manager
  DB_PORT: "5432"
  DB_ENABLE_SSL_AUTH: "false"
---
# Source: opa-la/charts/opa/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-opa-configmap
data:
  OPA_CONFIG: "services:\n  s3:\n    url: http://localhost:9000/opa\n    credentials:\n      s3_signing:\n        environment_credentials: {}\n\nbundles:\n  authz:\n    service: s3\n    resource: /opa.tar.gz\n\ndecision_logs:\n  console: false\n\n\n\nstatus:\n  service: s3\n  \n  prometheus: true\n  \nstorage:\n  disk:\n    directory: /tmp/opa\n    auto_create: true\n"
---
# Source: opa-la/charts/auth-manager/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-auth-manager
  labels:
    app: auth-manager
    component: auth-manager
    environment: development
    release: release-name
    helm.sh/chart: auth-manager-1.1.0
    app.kubernetes.io/name: auth-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: auth-manager
    release: release-name
    run: release-name-auth-manager
    app.kubernetes.io/name: auth-manager
    app.kubernetes.io/instance: release-name
---
# Source: opa-la/charts/opa/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-opa-service
  labels:
    app: opa
    component: opa
    environment: development
    release: release-name
    helm.sh/chart: opa-v1.1.0
    app.kubernetes.io/name: opa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 80
      targetPort: 8181
      protocol: TCP
      name: opa
  selector:
    app: opa
    release: release-name
    run: release-name-opa
    app.kubernetes.io/name: opa
    app.kubernetes.io/instance: release-name
---
# Source: opa-la/charts/auth-cron/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-auth-cron
  labels:
    app: auth-cron
    component: auth-cron
    environment: development
    release: release-name
    helm.sh/chart: auth-cron-1.1.0
    app.kubernetes.io/name: auth-cron
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-cron
      release: release-name
      run: release-name-auth-cron
      app.kubernetes.io/name: auth-cron
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: auth-cron
        release: release-name
        run: release-name-auth-cron
        app.kubernetes.io/name: auth-cron
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/configmap: 530e5b5e116d86b195baba4597bd08f001ab3a86a253e26102e994f260ffeb11
    spec:
      imagePullSecrets:
        - name: "my-registry-secret"
      containers:
        - name: release-name-auth-cron-deployment
          image: my-registry-url.io/auth-cron:v0.0.0
          volumeMounts:
            - name: config
              mountPath: /usr/src/app/packages/auth-cron/config/production.json
              subPath: production.json
              readOnly: true
          env:
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: 
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: 
                  key: password
          envFrom:
            - configMapRef:
                name: release-name-auth-cron-configmap
          livenessProbe:
            initialDelaySeconds: 60
            httpGet:
              path: /liveness
              port: 8080
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: config
          secret:
            secretName: release-name-auth-cron-cron-secret
            items:
            - key: config
              path: production.json
---
# Source: opa-la/charts/auth-manager/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-auth-manager
  labels:
    app: auth-manager
    component: auth-manager
    environment: development
    release: release-name
    helm.sh/chart: auth-manager-1.1.0
    app.kubernetes.io/name: auth-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-manager
      release: release-name
      run: release-name-auth-manager
      app.kubernetes.io/name: auth-manager
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: auth-manager
        release: release-name
        run: release-name-auth-manager
        app.kubernetes.io/name: auth-manager
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/configmap: 1a82625f7eb369137727716f9d3715f462d652a54c5ba7b2841969624b512d4c
    spec:
      imagePullSecrets:
        - name: "my-registry-secret"
      containers:
        - name: release-name-auth-manager-deployment
          image: my-registry-url.io/auth-manager:v1.1.0
          volumeMounts:            
          env:
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: 
                  key: username                  
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: 
                  key: password
            - name: SERVER_PORT
              value: "8080"
          envFrom:
            - configMapRef:
                name: release-name-auth-manager-configmap
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 60
            httpGet:
              path: /liveness
              port: 8080
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
---
# Source: opa-la/charts/opa/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-opa
  labels:
    app: opa
    component: opa
    environment: development
    release: release-name
    helm.sh/chart: opa-v1.1.0
    app.kubernetes.io/name: opa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  
  selector:
    matchLabels:
      app: opa
      release: release-name
      run: release-name-opa
      app.kubernetes.io/name: opa
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: opa
        release: release-name
        run: release-name-opa
        app.kubernetes.io/name: opa
        app.kubernetes.io/instance: release-name
      annotations:
    spec:
      imagePullSecrets:
        - name: "my-registry-secret"
      volumes:
        - name: opa-configfile
          configMap:
            name: release-name-opa-configmap
            items:
            - key: "OPA_CONFIG"
              path: "opa.yaml"
      containers:
        - name: release-name-opa-deployment
          image: my-registry-url.io/openpolicyagent/opa:0.53.0-envoy-3
          volumeMounts:
          - name: opa-configfile
            mountPath: /opa/opa.yaml
            readOnly: true
            subPath: opa.yaml
          args:
          - "run"
          - "--server"
          - "--addr=0.0.0.0:8181"
          - "--diagnostic-addr=0.0.0.0:8282"
          - "--config-file"
          - "/opa/opa.yaml"
          resources:
            limits:
              cpu: 400m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: "s3-secret"
                  key: accessKeyId
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "s3-secret"
                  key: secretAccessKey
            - name: AWS_REGION
              value: ' ' # Region is hardcoded since we don't use real AWS S3
          livenessProbe:
            httpGet:
              path: /health?plugins
              port: 8282
            initialDelaySeconds: 5
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health?plugins
              port: 8282
            initialDelaySeconds: 5
            periodSeconds: 30
---
# Source: opa-la/charts/opa/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-opa-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-opa
  minReplicas: 2
  maxReplicas: 15
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 75
        type: Utilization
    type: Resource
  - resource:
      name: memory
      target:
        averageUtilization: 75
        type: Utilization
    type: Resource
