global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: ''

environment: &environment development

cloudProvider: &cloudProvider
  dockerRegistryUrl: my-registry-url.io
  imagePullSecretName: 'my-registry-secret'
  flavor: openshift

caSecretName: &caSecretName ''
caPath: &caPath '/usr/local/share/ca-certificates'
caKey: &caKey 'ca.crt'

dbConfig: &dbConfig
  host: localhost
  username: postgres
  password: postgres
  database: auth-manager
  # port: 5432
  externalSecretName: ''
  useExternalSecret: true
  sslAuth:
    enabled: false
    secretName: secret-name
    certFileName: postgresql.crt
    keyFileName: postgresql.key
    caFileName: root.crt

opa:
  cloudProvider: *cloudProvider
  environment: *environment
  caSecretName: *caSecretName 
  caPath: *caPath
  caKey: *caKey

  image:
    repository: openpolicyagent/opa
    tag: 0.53.0-envoy-3

  enabled: true
  replicaCount: 2
  nodePort: 30000
  config:
    bundle:
      serverUrl: http://localhost:9000/opa
      filePath: /opa.tar.gz
    decisionLogs:
      enabled: false
    tracing:
      enabled: false
      type: grpc
      endpoint: http://loaclhost:4317
    prometheus:
      enabled: true      

  s3:
    secretName: s3-secret
    awsRegion: ' '      

  resources:
    enabled: true
    value:
      limits:
        cpu: 400m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

  additionalPodAnnotations:
    {}

  # hpa:
  #   enabled: true
  #   minReplicas: 2
  #   maxReplicas: 10
  #   metrics:
  #   - type: Resource
  #     resource:
  #       name: cpu
  #       target:
  #         type: Utilization
  #         averageUtilization: 75

  route:
    enabled: false
    https: true
    path: /
    timeout:
      enabled: true # defaults to 30s by openshift
      duration: 60s # supported units (us, ms, s, m, h, d)

  ingress:
    enabled: false
    path: /
    host: 'localhost'

auth-cron:
  enabled: true
  environment: *environment
  initialDelaySeconds: 60
  resetOnConfigChange: true

  cloudProvider: *cloudProvider

  caSecretName: *caSecretName 
  caPath: *caPath
  caKey: *caKey

  image:
    repository: auth-cron
    tag: 'v0.0.0'

  env:
    logLevel: info
    logPrettyPrintEnabled: false

  dbConfig: *dbConfig

  cronConfig:
    {}
    # np:
    #   pattern: '* * * * * *'
    #   s3:
    #     accessKey: access-key-value
    #     secretKey: secret-key-value
    #     endpoint: http://url-to-s3
    #     bucket: bucket-name
    #     key: key-name
    # stage:
    #   pattern: '* * * * * *'
    #   s3:
    #     accessKey: access-key-value
    #     secretKey: secret-key-value
    #     endpoint: http://url-to-s3
    #     bucket: bucket-name
    #     key: key-name
    # prod:
    #   pattern: '* * * * * *'
    #   s3:
    #     accessKey: access-key-value
    #     secretKey: secret-key-value
    #     endpoint: http://url-to-s3
    #     bucket: bucket-name
    #     key: key-name

  resources:
    enabled: true
    value:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

auth-manager:
  enabled: true
  environment: *environment
  replicaCount: 1
  initialDelaySeconds: 60
  resetOnConfigChange: true

  cloudProvider: *cloudProvider

  caSecretName: *caSecretName
  caPath: *caPath
  caKey: *caKey

  image:
    repository: auth-manager
    # tag: 'latest'

  env:
    port: 8080
    targetPort: 8080
    logLevel: info
    logPrettyPrintEnabled: false
    responseCompressionEnabled: true
    requestPayloadLimit: 1mb
    tracing:
      enabled: false
      url: http://localhost:55681/v1/trace
    metrics:
      enabled: false
      url: http://localhost:55681/v1/metrics

  dbConfig: *dbConfig

  resources:
    enabled: true
    value:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

  route:
    enabled: false
    path: /
    timeout:
      enabled: false # defaults to 30s by openshift
      duration: 60s # supported units (us, ms, s, m, h, d)

  ingress:
    enabled: false
    path: /
    host: 'localhost'
