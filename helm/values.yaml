global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  mcLabelsAndAnnotations:
    environment: development

configServerUrl: &configServerUrl 'http://localhost/api'
offlineMode: &configOfflineMode false

cloudProvider: &cloudProvider
  dockerRegistryUrl: my-registry-url.io
  imagePullSecretName: 'my-registry-secret'
  flavor: openshift

ca: &ca
  enabled: true
  secretName: 'root-ca'
  path: '/usr/local/share/ca-certificates'
  key: 'ca.crt'

dbConfig: &dbConfig
  secretName: 'postgres-secret'
  sslAuth:
    enabled: true

opa:
  cloudProvider: *cloudProvider
  ca: *ca

  image:
    repository: openpolicyagent/opa
    # tag: 1.0.1

  enabled: true
  replicaCount: 1

  s3:
    endpoint: http://localhost:9000/opa
    secretName: s3-secret
    filePath: '/dev.tar.gz'    

  resources:
    enabled: true
    value:
      limits:
        cpu: 400m
        memory: 300Mi
      requests:
        cpu: 100m
        memory: 300Mi

  hpa:
    enabled: false

  route:
    enabled: false
    https: true
    path: /
    timeout:
      enabled: true # defaults to 30s by openshift
      duration: 60s # supported units (us, ms, s, m, h, d)

auth-cron:
  enabled: true

  cloudProvider: *cloudProvider

  ca: *ca

  image:
    repository: infra/auth-cron
    # tag: 'v1.3.0'

  env:
    logLevel: info

    configManager:
      offlineMode: *configOfflineMode
      serverUrl: *configServerUrl
      configName: 'infra-auth-cron'
  
  dbConfig: *dbConfig

  # cronConfig:
    # np:
    #   pattern: '* * * * * *'
    #   s3:
    #     accessKey: access-key-value
    #     secretKey: secret-key-value
    #     endpoint: http://url-to-s3
    #     bucket: bucket-name
    #     key: key-name

  resources:
    enabled: true
    value:
      limits:
        cpu: 400m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

auth-manager:
  enabled: true
  replicaCount: 1
  initialDelaySeconds: 60

  cloudProvider: *cloudProvider

  ca: *ca

  image:
    repository: infra/auth-manager
    # tag: v1.3.0

  env:
    port: 8080
    targetPort: 8080
    logLevel: info

    configManager:
      offlineMode: *configOfflineMode
      serverUrl: *configServerUrl
      configName: 'infra-auth-manager'

  dbConfig: *dbConfig

  resources:
    enabled: true
    value:
      limits:
        cpu: 400m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

  route:
    enabled: false
    path: /
    timeout:
      enabled: false # defaults to 30s by openshift
      duration: 60s # supported units (us, ms, s, m, h, d)

auth-ui:
  enabled: true
  environment: *environment
  replicaCount: 1
  initialDelaySeconds: 60

  cloudProvider: *cloudProvider

  ca: *ca

  image:
    repository: infra/auth-ui
    # tag: v1.3.0

  env:
    port: 80
    targetPort: 3000

  config: |
    {
      "8080": {
        "name": "Infra Dev Auth Manager",
        "url": "https://infra-opala-auth-manager",
        "envs": [
          {
            "envKey": "prod",
            "opaUrl": "https://infra-opala-opa-service"
          }
        ]
      }
    }

  resources:
    enabled: true
    value:
      limits:
        cpu: 400m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

  route:
    enabled: true
    path: /
    host: 
    timeout:
      enabled: false
      duration: 60s
    tls:
      enabled: true
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
      useCerts: false
      certificate:
      key:
      caCertificate:
