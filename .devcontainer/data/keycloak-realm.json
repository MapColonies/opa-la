{
  "id": "3a403b37-3d3e-4b80-b8da-9fe4bc04e238",
  "realm": "my-local-realm",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "bruteForceStrategy": "MULTIPLE",
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "ca528457-dcb3-45e5-bcc7-9103469e48f6",
        "name": "default-roles-my-local-realm",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"]
        },
        "clientRole": false,
        "containerId": "3a403b37-3d3e-4b80-b8da-9fe4bc04e238",
        "attributes": {}
      },
      {
        "id": "350e103b-6932-45de-a14c-828d5fd887a2",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "3a403b37-3d3e-4b80-b8da-9fe4bc04e238",
        "attributes": {}
      },
      {
        "id": "7ff24423-cddf-4c82-b0d7-2cb89088499c",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "3a403b37-3d3e-4b80-b8da-9fe4bc04e238",
        "attributes": {}
      }
    ],
    "client": {
      "my-local-app": [],
      "realm-management": [
        {
          "id": "0115299e-ec31-4268-858b-b38d31933203",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "5a87b6c6-d10f-4807-b6dd-e0fc9f142b80",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "9f669011-5b31-4628-860e-bfd3ba3d4ef0",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-users", "query-groups"]
            }
          },
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "78946556-c505-41b9-8a7a-a9cdeb0d8e14",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "824cf4c8-2f8d-4d1e-9177-1a3ce0ffab75",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "f1d57c06-2573-4d79-8020-0cc4c7c6a237",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "f5a34d9e-433f-4773-9baa-4d50a4afb273",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "57782079-4e9a-4996-a4ac-548c2a8337ae",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients",
                "view-users",
                "query-users",
                "view-identity-providers",
                "view-realm",
                "manage-users",
                "manage-events",
                "manage-identity-providers",
                "view-clients",
                "query-realms",
                "view-authorization",
                "manage-authorization",
                "view-events",
                "manage-clients",
                "manage-realm",
                "query-groups",
                "impersonation",
                "create-client"
              ]
            }
          },
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "6513ca06-334e-4486-9f5f-671955306ecf",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "2bdfa142-f580-4966-a90e-ebb352c001c3",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "9ae9c690-dc79-483c-8bf5-5e5bc14875fc",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "2efe74cd-aa3d-4f01-ac26-d3f612e0f3ed",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "edbcdfad-384b-43d3-a619-cb9c7fb768cf",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "492ad746-2779-498a-b2ca-50de60552512",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "43fe7ea4-78e8-483d-80b6-1c46c3088b54",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "4f37f24b-b11a-46e3-b4f8-c81c03cd00b2",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "bf52ef76-24b0-4419-bd5c-e92900034d11",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "220dea5d-9b83-496d-8057-4a24efb73376",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        },
        {
          "id": "752de644-5ec3-4119-8be8-2112ae700665",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [],
      "account": [
        {
          "id": "c85bf97e-e690-4e67-b8da-acf34051a98c",
          "name": "view-groups",
          "composite": false,
          "clientRole": true,
          "containerId": "5d293f8d-5975-4085-a558-40b859684f0e",
          "attributes": {}
        },
        {
          "id": "73d9ffe8-78f9-43eb-95f5-53fe7c47c516",
          "name": "manage-account",
          "composite": false,
          "clientRole": true,
          "containerId": "5d293f8d-5975-4085-a558-40b859684f0e",
          "attributes": {}
        },
        {
          "id": "a2f3a3c6-2567-4762-88f7-80027cb780b5",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "5d293f8d-5975-4085-a558-40b859684f0e",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "ca528457-dcb3-45e5-bcc7-9103469e48f6",
    "name": "default-roles-my-local-realm",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "3a403b37-3d3e-4b80-b8da-9fe4bc04e238"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": ["totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName"],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256", "RS256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256", "RS256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "d1e296e2-39e8-40bc-9789-480c296cc682",
      "username": "avi",
      "firstName": "avi",
      "lastName": "avi",
      "email": "avi@avi.com",
      "emailVerified": false,
      "enabled": true,
      "createdTimestamp": 1751740724380,
      "totp": false,
      "credentials": [
        {
          "id": "98f0f347-3859-45db-8a6c-b9c796285b59",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1751740732765,
          "secretData": "{\"value\":\"uT2rLJ9C0eB/PynBzFY2kNxFrAkuY3Qt9Yo5eRqy35s=\",\"salt\":\"uZEeUxDFkRayn6FRLCHyQg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-my-local-realm"],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "5d293f8d-5975-4085-a558-40b859684f0e",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/my-local-realm/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/my-local-realm/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "basic", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "organization", "microprofile-jwt"]
    },
    {
      "id": "0bc18106-a8d7-4b73-8a85-ad1bfe3ea089",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/my-local-realm/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/my-local-realm/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "0a0d1ee6-d5a3-422d-92f5-2b0823ed4165",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "basic", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "organization", "microprofile-jwt"]
    },
    {
      "id": "61597aff-6945-45e0-8ad9-7e3cb44cfaf8",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "basic", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "organization", "microprofile-jwt"]
    },
    {
      "id": "18628ec0-5256-4911-98dc-c861d7ae0814",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "basic", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "organization", "microprofile-jwt"]
    },
    {
      "id": "96abe040-66eb-45ef-b28a-fcc343a9312b",
      "clientId": "my-local-app",
      "name": "",
      "description": "",
      "rootUrl": "http://localhost:5173",
      "adminUrl": "http://localhost:5173",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": ["http://localhost:5173/callback"],
      "webOrigins": ["http://localhost:5173"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1751440392",
        "backchannel.logout.session.required": "true",
        "standard.token.exchange.enabled": "false",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "basic", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "organization", "microprofile-jwt"]
    },
    {
      "id": "777f83ce-ef15-4e7b-8b2d-edb618066e21",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "basic", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "organization", "microprofile-jwt"]
    },
    {
      "id": "ebd026ce-a03f-4ec5-978e-4998df4d2fd5",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/my-local-realm/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/my-local-realm/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "4fbfb0ec-76e4-442e-a7eb-cb4e8fb07b09",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "basic", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "organization", "microprofile-jwt"]
    }
  ],
  "clientScopes": [
    {
      "id": "cbab1e4e-f4a2-4dfd-9452-8dee1fdf07cc",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "6ad357c0-eaf3-48b0-b741-3ea9a87aee8e",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "d98fee01-9dc1-4d5a-8fd5-bf56173af39a",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "e46725a2-f904-4a02-8737-152ae74f6b84",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "e296ee34-cb88-42aa-bc60-57c41f832b39",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "cab61090-e2e5-4f7f-a672-9fa10e989dcb",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "711e5f8c-bccb-4981-8966-2e605f825bd2",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8bbfd012-a5ee-48e2-8f19-21cbb3ac6d1a",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3267e419-6e57-400f-8eab-3f91af3b3d7e",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "20db8833-44ef-4eb6-b467-2c30d3ee6aa6",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "08572a9f-4f2d-472e-956a-9d11b978fa0c",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d14b6bd2-cef0-4379-8cf2-cd0c992baad3",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5de7ad91-a7b7-442e-8ee8-1384605a4db7",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7d273017-ecc7-4db5-89aa-8452b2442506",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "07198170-7efc-4490-89cf-daa2e0c708a1",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5dc8840a-1294-43ca-98b2-0451a4d45aa0",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2ce38f3a-c12f-42f8-97a5-1031888cdd15",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cc93bd15-379a-4d8b-b25f-c0b6da485c07",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "4745b3e1-48ed-4a45-bfe5-40b7a1d623b7",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "e364dcd2-d3ff-4874-bad9-b7dd0a44081e",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "39c745d6-f0fa-4a77-b9b3-54c37dde45bf",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "53890a52-1cde-486a-92ad-9ecda5811a79",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "f31f94da-8218-4309-a606-afd982892656",
      "name": "saml_organization",
      "description": "Organization Membership",
      "protocol": "saml",
      "attributes": {
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "84482bd8-71b1-423f-81e7-555c025af4c1",
          "name": "organization",
          "protocol": "saml",
          "protocolMapper": "saml-organization-membership-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "56d1469c-2178-4c0c-bff9-6978abb2a7fa",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "eb0114d0-107a-4a00-bf0a-b92b899b73b9",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "d90a1431-25a5-43e4-a0fb-f02bb4bdaedb",
      "name": "service_account",
      "description": "Specific scope for a client enabled for service accounts",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "400a3d55-a947-4cce-89d4-d6e6004a3776",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c245f3c8-a689-41af-9fd7-9339616fcd77",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "38391e97-d77f-4ff1-8b38-a30b0a45e94e",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "1bf2abcf-0db0-40a8-aeff-e6a6c2c70898",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b2ddea5e-8fbb-4652-aa76-1f7bb241d40c",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "0425b4bf-4914-4f9d-8c20-5993fc4d6424",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "20b2c96e-9f39-4686-b431-443f9b92875a",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        },
        {
          "id": "7f1f20d7-70dc-4fea-879e-94cf0093fcdd",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "db5a22ff-0182-472a-b80f-66884b4f8ba7",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "38d70133-6d7c-49b1-8757-12c95b4dd126",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "7da34a4b-09f7-4fc5-a15b-7b3206c14384",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "6155a72a-73ca-45c0-942a-9bc6eedac10e",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "62329693-e3c8-4d82-b137-91b61bab07e9",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "3b7fcaa5-d1bd-4c06-8e5a-b571ac081e87",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "d6c50dbb-206b-499d-8100-ac6c90bb89e1",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "cd473b50-f848-4980-8b4b-7b069f24833b",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "64dc1a35-cc4c-49fa-8364-a7c7d832bbf8",
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "57af9c55-2399-43d4-a4df-65d8116f7980",
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "a47b8788-1a73-4696-b861-eb8d692f4eca",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "5404f5c9-faaf-41b1-bf7b-4523d7a376cf",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "24b951ea-b142-4aa8-83d7-f3e2c3389a8f",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": ["role_list", "saml_organization", "profile", "email", "roles", "web-origins", "acr", "basic"],
  "defaultOptionalClientScopes": ["offline_access", "address", "phone", "microprofile-jwt", "organization"],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "d0f3a414-9cc9-4179-82e6-39f9e2df3aa7",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "3314adec-2926-4bdd-ac43-6e7e3ce644b0",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper"
          ]
        }
      },
      {
        "id": "004e709b-164a-425a-a99d-5af16c51de0d",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "08fd5bb2-2819-41d4-ab71-84c7b68261d2",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "a6a20816-25b1-47dc-aee7-da2cb623bda5",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "cff565ff-b5c2-497f-af32-75ec45107982",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "3dc7786a-159b-4a7d-9dcc-e25a31924ecf",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "096efc51-8ea4-4e18-a8a7-257f1485e4cb",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "7b9ad471-d472-4323-89f2-36499db34a83",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAnYb+J0peseTFAu5xVkyU7+q1nS6wZ9Y9DN0lUxDFQagToQyPhZymdTLjq101wRDAhOum/4ozKBPmjX+DQPNO2SDD2LX4Suk8VTfcTO7zwSXsZ99ZPW4kf4eGIlYEUqgD4aUhBq32otbAaOF9zWr69lZANaaFL8xkL9+HBxwKm0XxG4MUl/ivziH2Piem/8+gFUopwjyqs6CRnohDCeZ7ewOtvolTu3ryHT7vf5p+acnQncabo+wWaRkOf4iFsabsQLLwmIWNWYP23Jwda0BSKH2NCnOTRmEoFzzO6woms6x/CT0muGJR4Yjrw8atb9csZocl82SYpUN+K/ev6o9A7QIDAQABAoIBAB+FJu7CtU8AOSGch4YencCh5MQ2Vur4FdAwoerMlMPN91uG0WMJVM9npuGfrYVbrkIKiyhfxVu0G7JdfOxuouzUXwvKYYvPvphIrKaiO5j+1x5ztP4TP29bNU5CiuvlHZ21dnXJMmwj720tDYigauYGnSN/FfBaBAQGRJT6Ge82j5BIVmrdwztF7jQ7TeJPZxgv7RnaCm1BetJOlA7BBwIJginUHoZa8h3QZkoWWsATWCIhzY5HFQenULNCLjYZy5I95s3OZPehkG/duUabXnfoUBBomYm/RbdBx4Np3ap5zsX72vlrIRpPLx0mw6r4eYj+bQBJZzjv+1rHuaM1NYECgYEA0yRVRTKoLO2SiskFt998nG4ArI8W0eLt1qIv7VKUXnlvvQS9MqlPhAf2/wp2/zUKDOaGTSOtsJIB9VAPu/qWcjKzDLv1H67Yht/oNrPoVJY+v1dZQPH73HYEjj0wzIVg6SJXFh3WCBgk6OT2Zwbn/sgRR1TF9wR/X01yIUTDNsECgYEAvv6l4p7uBYHOxMbU1wi3fER/CqtZ2QYwnZwGr/COpT99vXRrwKmo78gF3ZIHOP884Eba9IhpNAkKOgAQt6vg0g78Z4/R4T7SDOU+e/RTwzcLHrOHcyse0nx6zCO5c7VyFmsgppq4v7WwAGdwkpbiz5yvSJSE2kEYXwrQtU/f4S0CgYEAoSWy2vx9tMShusEQVzUAI1gltY4EKa7cPZtNnwEO8kgWyxnp2Ne2M5vsnNz8021EvXHYANoBP6lAS12OlLb9yiz90PNHc6X75nzP+6g14xFE1L6zBUlrI+kDMxhqvT3zKBwogV3GNClRSlst4JY5zJAf9+Qwr4ZEPJWcTN3xbEECgYEAumAj4BDWk+knrD2aVHvdERaGIhMziePQbPxkSiukBvz95nJE86ybfeDiWGS3R5dKAFEkOJskjfKEWDTYG2NN761QAH8Hf5Wdw5ewcaTqWATOhRcLhgb9/MgbzDjQL2lP+zBunCU/Q1Q4eyx1XZZ/nbh4E4taWOBMt/IF1+gpv8ECgYB9TPjco7AyjZXUQZOmQMZ/9JvfHQH/9k29DNwnnGoEB5gYqEMKB1gnv9jyFpEzSqdCIRe+2k2Lka9GCQSsJGkEPZ6deBRabXowseNwTet56Fd+s24chAWFfPOIVdqIWi1a+xr/UyFwXYwX/NYNSg2rpN9xiHGYMCKRsJY6Y+uAxA=="
          ],
          "certificate": [
            "MIICqzCCAZMCBgGX29tyOjANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA5teS1sb2NhbC1yZWFsbTAeFw0yNTA3MDUxODI5NDFaFw0zNTA3MDUxODMxMjFaMBkxFzAVBgNVBAMMDm15LWxvY2FsLXJlYWxtMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnYb+J0peseTFAu5xVkyU7+q1nS6wZ9Y9DN0lUxDFQagToQyPhZymdTLjq101wRDAhOum/4ozKBPmjX+DQPNO2SDD2LX4Suk8VTfcTO7zwSXsZ99ZPW4kf4eGIlYEUqgD4aUhBq32otbAaOF9zWr69lZANaaFL8xkL9+HBxwKm0XxG4MUl/ivziH2Piem/8+gFUopwjyqs6CRnohDCeZ7ewOtvolTu3ryHT7vf5p+acnQncabo+wWaRkOf4iFsabsQLLwmIWNWYP23Jwda0BSKH2NCnOTRmEoFzzO6woms6x/CT0muGJR4Yjrw8atb9csZocl82SYpUN+K/ev6o9A7QIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAGcytBo3UME5FeETLL6TTIZwhUGDH42qONAsSrES24boh2Qxd+F4fogLbLqXyXIolsUhb+JePZNfVZpvQ5pwz/O4wviHjaNeGyGBRCyC5WL9rfEVCnWn/OZWn1Fwx+CrGAVOHOt103BGdafDkz179SXWiM2yQRNFmbLBfZI+56dzVBFVkeKg7TdK/pDnt1tFNC4j5sr5Px3NeHvtLOt6elxoxLPALbz0kudiInxSkvzBauxOTp8/G4PVNrkrcaSZRZErnl+pEvH0J8l167m+t8aIPGbDrYGy0mZ5honRr236GeOW5JwGY2kcwtcYgD5rWssGCWUpNrYf+5BWOSvsgN"
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "d5e7f5b8-fe33-4de5-977b-543a7d9e2ece",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["9ea8dc22-bf6a-4449-aea3-52c86b41e5b3"],
          "secret": ["SLo4f8feXG2FAJjlpMzu3A"],
          "priority": ["100"]
        }
      },
      {
        "id": "f2d0665e-4049-4248-a862-652b8cbc1586",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAqcaM5JEZIwWNVG3+tx2RDdLDztPD1Rg4wDHeMlbfj6u/DWxsVY13nEaD7iemUnu8SUHgz5ZPBcu/cwTu+Fi+zcvvv/BTV6770m5o1XY1IQ8WNuLo74bhDrYdls/eFGGr78CB9oC7K0kXNbA17ETa9sir4K8jx+faH5lhmNW7nqcK0jDLydH9qFTIgxIyQoMiZ75fpZp2pYsHqhZVzGxpLKUoLmBxkqtj4WIDaRE3PYRlNufo5bsGDbwS5gQOjDrJds9EOAD6ZeS8Kz7+zzSH8/V6IzMarED0clhR9gijHxjKK0luj3NbI6MCIEyd2JTLNR0McKTxluy+75MkSDMwAwIDAQABAoIBAAGKhBHHEhDlwuSoovIn6IzxkmJVIG4q+lce8hhHxZguRAgkt5Yjqe7zqVrqgo38rKijzDmA1HLNPf9sK9HPgb9vlyKlxyaPDS09YDeRmZCHCPmykZecy1+GJXOAVjRlKFm4HWerMUCjHIsLjN/6Kc43qsQvIQZ2ZsGU5UmtM2/l45Y0S0dbGWXodL2WxF+EIJJmJrTP751c6vTkjUsXLL1/VaJ9m74AsBrY6T1iQJZhxEPauDwlY1U+37OMysruZjUh7dxq4c+B3CK00wv6wOeOptalt+UpDJx/UrNAgNauCQPl60Izny9DjgkwfG8o15g+tc1B3Ablbx62+sSIMAECgYEA4aH9+vrV3HE96Uo93ethWT8sdIPjeNbFTnp7WoHrVe9ow+W9g4buX8XfFiuqmKiiqwMlnL2FlWvS3O5440ezaU0OmtcK6QSXSQb7esq/+8NQ3N8GzMEFZRFpskJ4niCs8n6KAFSBEttkAB+VaaLQQItMLRzf5NSQ2SS3ArSMfAECgYEAwKAKZUfLIUKIM1tG0HDtiMPAlpAtY2GGkOlvAfKcTobvHTXukXPijVgucs2KryOyBEls9STtp7qvhXGkLA5eJb5lxMVW16TEeIpFDm4FPK8QmdahBpVt3SEUdLUmBetNRtMr2tA6RL7LmPfiZi97D4DBXDu4o5/IJKcNOHN9vAMCgYBNckv6POTxUJFepRQNO0Dj4FJDAA4xKQ76fAIhM9zyV0XPj+j333Wsu/9x3bUlxyRmrKLZZRgYDLWJDfXClZbYexGbRlrBVskS0Om64SL6qLT1yzvLRimy4kI0ZKqAJFkYtyRpLphLP7DYdf7UDoWK0gVoqrOTGP9K+VY0AIMEAQKBgQCqAtcKCzKi2WkDAvXedT2Bb1ykxv34cBRoBFAgxPPmbzvOaVJ1+HUl0YW1d+qGqBevpurO91f2qVPPkLyY0dmQsJp78Ly0Oc3aohdPJBXlOJKLZR7cg7ji6hZ254d2w/aBo1Jan1w+XrOuAGNHU3Lm/PosoN1XNWhdyT9m6rA35wKBgQCRp0gNJ5bvtskXBJMnBWLaIiKXIgBnU2NVKQRz15EIDOjdTe5+u4BEPsOq0Gv4E1cPOv/cgEYpFG3DMGVa6OoOQ8VZ19vPTDTp6GyQz0l/99gQuS/yGbVjHarKTl6cDD+HeaH+UX+7LbbL6R+iJixAP3+l4BiyAZcGhpS0BrmKEA=="
          ],
          "certificate": [
            "MIICqzCCAZMCBgGX29ty2zANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA5teS1sb2NhbC1yZWFsbTAeFw0yNTA3MDUxODI5NDFaFw0zNTA3MDUxODMxMjFaMBkxFzAVBgNVBAMMDm15LWxvY2FsLXJlYWxtMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqcaM5JEZIwWNVG3+tx2RDdLDztPD1Rg4wDHeMlbfj6u/DWxsVY13nEaD7iemUnu8SUHgz5ZPBcu/cwTu+Fi+zcvvv/BTV6770m5o1XY1IQ8WNuLo74bhDrYdls/eFGGr78CB9oC7K0kXNbA17ETa9sir4K8jx+faH5lhmNW7nqcK0jDLydH9qFTIgxIyQoMiZ75fpZp2pYsHqhZVzGxpLKUoLmBxkqtj4WIDaRE3PYRlNufo5bsGDbwS5gQOjDrJds9EOAD6ZeS8Kz7+zzSH8/V6IzMarED0clhR9gijHxjKK0luj3NbI6MCIEyd2JTLNR0McKTxluy+75MkSDMwAwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB6RDmsV7FFpmeJ2N13Kj9Jr0lbqCxzEBOPebSzcidi8lw0Yx2Asrbz1wgbnpcI8wQvq4IGkv7v7B6S1OyFT3Ujw4lII65jeI0Sr/kB+akwz/yk6z+/3IhVwuDew3pxue9Yb6md5NnE7Ns2qShr1bhzBfxPJ02U5fv5Ler1rSPnYLLznzwEWUTYETBela1IxvD/+G9Uvy+bTwBC77Ss5HBgaaKOs0W5VW9EQx9cs2BuM+wPvrdvIJChJ/zU51UbRDDyjq4hJ87F+nj1JrM/S9Pdo8yhfoszdsTLWps5u911uW0vx2AJXEJBfSzIE8rmxxX2iMxBRiSbi20Uxlj9a6mh"
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      },
      {
        "id": "d6c8d2c6-4def-481b-a44b-5aa948749a2f",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["8ae99ddb-ee75-46e4-9dae-8d38b50247a7"],
          "secret": [
            "Lel4HN4aplIR6vj74tg_mvC3oPc1MX2_tKCuxY60PEex86jDyQcNmYfS6F4BUFT86iqsazJ0r3_qTh6fNB1V9b7AQVcuOpNEBqdEmDbGzqP039nbdQU6ypHqhcPtK0vCzXz2MBYPMnRwM-6b0tqbjQYc4ka786tPgA0dRfVAdUQ"
          ],
          "priority": ["100"],
          "algorithm": ["HS512"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "authenticationFlows": [
    {
      "id": "966f3a96-b8ec-4f57-9ec3-148bc774fd1f",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "06456568-91ed-45f0-ae9e-ee0a638fb9ca",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "98079f69-0847-4519-a2ec-5b7b7f4ccb10",
      "alias": "Browser - Conditional Organization",
      "description": "Flow to determine if the organization identity-first login is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "organization",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "23676a23-dc9d-46d0-af89-a8c18eaa196f",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0702b71b-6817-473c-af56-5e37dc1de5c0",
      "alias": "First Broker Login - Conditional Organization",
      "description": "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-add-organization-member",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "664399cb-0073-4864-8115-d3c3bbde7ca5",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "531ccccf-72e6-424f-b9c2-c7ec46455b95",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0cad03be-de10-4660-b087-8eb3c6772bd1",
      "alias": "Organization",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a8229223-ff25-4bce-8acc-c9e913574471",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f29888c5-c1b7-4fe3-bf29-32e959fea054",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "075072c9-97ca-4e16-8863-41605fa632b7",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "800dcff8-5441-4f04-9b9c-1c31cdbec40f",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 26,
          "autheticatorFlow": true,
          "flowAlias": "Organization",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "95fa5d6b-5d30-4d90-83fd-a6d0675975fa",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "14fc07d0-6567-40bd-a2b1-7bee5bbec9af",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d227a34b-af7d-46ad-8220-c6d5c1b9017c",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "80067b5f-57ab-41f5-aceb-4745e7815e84",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 50,
          "autheticatorFlow": true,
          "flowAlias": "First Broker Login - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0382bed2-7c50-4d36-b496-740edcda5428",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "dc07998e-725b-463f-834a-6c9c0d9ee34f",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a5d05c84-f111-4b3d-b30a-60a1a4e146d2",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "dcaf1d23-e3cd-476e-bbb6-a7395757476b",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4312c261-167f-4cfe-a189-fd0c973ec17b",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "0e2ab3e5-89bf-4885-805a-35d8fe345ab1",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "ff1499f1-ae86-4c29-a421-fd939154feaa",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "idp_link",
      "name": "Linking Identity Provider",
      "providerId": "idp_link",
      "enabled": true,
      "defaultAction": false,
      "priority": 110,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "26.3.0",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "verifiableCredentialsEnabled": false,
  "adminPermissionsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
